/*
 * Copyright Â© 2020-2022 EC2U Alliance
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

card-card {

    --photo-aspect: calc(4 / 5);
    --holo-aspect: calc(4 / 3);

    --width: calc(100 * var(--vw, 1vw));
    --height: calc(100 * var(--vh, 1vh));

    --padding: calc(2.5 * var(--vmin));
    --logo: calc(20 * var(--vmin));

    width: var(--width);
    height: var(--height);

    display: grid;
    align-items: stretch;
    justify-items: stretch;

    grid-gap: calc(2 * var(--padding));

    box-sizing: border-box;
    padding: var(--padding);
    overflow: hidden;
    border-style: solid;

    & > * {
        overflow: hidden;
    }

    & > nav {

        display: grid;
        grid-row-gap: calc(2 * var(--padding));

        align-items: stretch;
        justify-items: stretch;

        & > .logo {

            grid-area: 1 / 1;
            width: var(--logo);
            height: var(--logo);

            background-position: 0 0;
            background-size: contain;
            background-repeat: no-repeat;

            &::after {
                display: none !important;
            }

        }

        & > .menu {

            grid-area: 2 / 1;
            align-self: end;

            display: grid;
            grid-template-columns: repeat(2, 1fr);
            grid-template-rows: repeat(auto-fit, min-content);

            color: #999;
            font-size: calc(var(--logo) / 2);

            & > * {
                transform-origin: center;
                transform: scale(0.85);
            }

            & > .spin {

                & > svg {
                    animation: card-spin-rotate 1.75s infinite linear;
                }

            }

        }

    }

    & > div {

        padding: 0.75em 1.5em;

        align-self: center;
        justify-self: center;

        display: flex;
        flex-direction: column;
        align-items: center;
        grid-gap: 0.5em;

        text-align: center;
        font-size: calc(7.5 * var(--vmin));

    }

    & > main {

        padding-left: 2.5rem;

        text-align: right;

        & > dl {

            display: inline-block;
            margin: 0;
            transform-origin: top right;

            & > * {
                padding: 0;
                margin: 0;
            }

            & > dt {

                font-size: 0.75em;
                color: #CCC;

                &:not(:first-child) {
                    margin-top: 0.5rem;
                }

                margin-bottom: 0.1em;

            }

            & > dd {
                font-weight: 700;
            }

        }

    }

    & > aside {

        display: grid;

        grid-gap: var(--padding);

        & > * {

            transform: scale(0.97); /* compensate border clippings */

        }

        & > .photo {

            display: grid;

            border-style: solid;
            border-radius: 0.75em;
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;

            & > svg {
                margin: auto;
                color: #CCC;
                transform: scale(5);
                stroke-width: 0.5;
            }

        }

        & > .qr {

            background-size: contain;
            background-position: center;
            background-repeat: no-repeat;

        }

        & > .hologram {

            background-size: contain;
            background-position: center;
            background-repeat: no-repeat;

        }

    }

    @media only screen and (orientation: portrait) {

        grid-template-columns: min-content 1fr;
        grid-template-rows: 1fr min-content;

        & > nav {

            grid-column: 1;
            grid-row: 1;

            grid-template-columns: min-content;
            grid-template-rows: min-content min-content;

        }

        & > div {

            grid-column: 1 / span 2;
            grid-row: 2;

        }

        & > main {

            grid-column: 2;
            grid-row: 1;

        }

        & > aside {

            grid-column: 1 / span 2;
            grid-row: 2;

            /* see card.svg */

            --aside-width: calc(var(--width) - 2 * var(--padding));
            --photo-height: calc(((1 + 1 / var(--holo-aspect)) * (var(--aside-width) - var(--padding)) + var(--padding)) / (1 + var(--photo-aspect) * (1 + 1 / var(--holo-aspect))));
            --code-size: calc((var(--photo-height) - var(--padding)) / (1 + 1 / var(--holo-aspect)));

            grid-template-columns: var(--code-size) calc(var(--photo-aspect) * var(--photo-height));
            grid-template-rows: var(--code-size) calc(var(--code-size) / var(--holo-aspect));

            & > .photo {

                grid-column: 2;
                grid-row: 1 / span 2;

            }

            & > .qr {

                grid-column: 1;
                grid-row: 1;

            }

            & > .hologram {

                grid-column: 1;
                grid-row: 2;

            }

        }

    }

    @media only screen and (orientation: landscape) {

        grid-template-columns: min-content 1fr min-content;
        grid-template-rows: 1fr;

        & > nav {

            grid-column: 1;
            grid-row: 1;

            grid-template-columns: min-content;
            grid-template-rows: min-content 1fr;

        }

        & > div {

            grid-column: 2 / span 2;
            grid-row: 1;

        }

        & > main {

            grid-column: 2;
            grid-row: 1;

        }

        & > aside {

            grid-column: 3;
            grid-row: 1;

            /* see card.svg */

            --aside-height: calc(var(--height) - 2 * var(--padding));
            --photo-height: calc(((1 + var(--holo-aspect)) * (var(--aside-height) - var(--padding)) + var(--padding)) / (var(--photo-aspect) + (1 + var(--holo-aspect))));
            --code-size: calc(var(--aside-height) - var(--photo-height) - var(--padding));

            grid-template-columns: var(--code-size) calc(var(--holo-aspect) * var(--code-size));
            grid-template-rows: var(--photo-height) var(--code-size);

            & > .photo {

                grid-column: 1 / span 2;
                grid-row: 1;

            }

            & > .qr {

                grid-column: 1;
                grid-row: 2;

            }

            & > .hologram {

                grid-column: 2;
                grid-row: 2;

            }

        }

    }

}

@keyframes card-spin-rotate {
    100% {
        transform: rotate(360deg);
    }
}